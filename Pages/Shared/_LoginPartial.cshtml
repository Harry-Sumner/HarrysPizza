@using Microsoft.AspNetCore.Identity
@using HarrysPizza.Models
@inject SignInManager<HarrysPizzaUser> SignInManager
@inject UserManager<HarrysPizzaUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @{
                    var user = await UserManager.GetUserAsync(User);
                }
                Hello @(user.FirstName)! <!-- Greet user by there first name rather than username -->
            </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    //<li class="nav-item">
       // <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    //</li>

    //Removed register link as looks cleaner - user is still able register for an account using login page

    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
